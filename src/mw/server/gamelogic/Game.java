package mw.server.gamelogic;

import java.util.ArrayList;



/**
 * Game class definition.
 * Generated by the TouchCORE code generator.
 */
public class Game {
    
    private ArrayList<Player> aPlayers;
    private  GameMap aMap;  
    private Player aCurrentPlayer;
    
public Game (ArrayList<Player> pPlayers, int mapID, Color colors) {
    aPlayers  = pPlayers;     
	for (Player lPlayer : aPlayers) {
            lPlayer.assignColor(colors);
        }
        if (mapID == 0) {
            aMap = new GameMap(30, 10); 
        } 
        else { //Query our database of maps 
           
            aMap = MapBase.getMap(mapID);
        }
        aMap.partition();
    }

    public void upgradeUnit(Unit pUnit, UnitType newType) {
        boolean success;
        int upgradeCost;
        Village villageRuling;
        Tile tile;
        UnitType unitType;
        unitType = pUnit.getUnitType();
        upgradeCost = PaymentManager.upgradeCost(unitType, newType);
        tile = pUnit.getTile();
        villageRuling = aCurrentPlayer.getVillageRuling(tile);
        success = villageRuling.tryPayingGold(upgradeCost);
    }

    public void beginTurn() {
        ArrayList<Village> aCrtVillages;
        aCrtVillages = aCurrentPlayer.getVillages();
        for (Village lVillage : aCrtVillages) {
            lVillage.updateTiles();
            lVillage.updateUnits();
        }
    }
    /**
     * Generates trees on tiles 
     */
    public void beginRound()
    {
    	//TODO 
    }

    
    //TODO -- Check if the unit is a knight, and act accordingly
    public void moveUnit(Unit pUnit, Tile pDestinationTile) {
        Tile crtTile;
        boolean isPath;
        Village crtVillage;
        Village villageDest;
        StructureType structureType;
        crtTile = pUnit.getTile();
        isPath = aMap.getPath(crtTile, pDestinationTile);
        structureType = pDestinationTile.getStructureType();
        
        if (isPath) 
        {
        	if (structureType==StructureType.TOMBSTONE) {
        		pDestinationTile.setStructureType(StructureType.NO_STRUCT); 
        		pUnit.setTile(pDestinationTile);
        	}
        	crtVillage = crtTile.getVillage();
        	if (structureType==StructureType.TREE) {
        		pDestinationTile.setStructureType(StructureType.NO_STRUCT);
        		pUnit.setTile(pDestinationTile);
        		crtVillage.addWood(1);
        	}
        	villageDest = pDestinationTile.getVillage();
        	if (villageDest==null) { // if the tile we want to go to is neutral land
        		crtVillage.addTile(pDestinationTile);
        	} 
        }
    }

    public void takeoverTile(Tile dest, Village invadingVillage) {
        Village invadedVillage;
        boolean canFuse;
        int aWood;
        StructureType structureType;
        int aGold;
        invadedVillage = dest.getVillage();
        structureType = dest.getStructureType();
        if (invadedVillage.getCapital().equals(dest)) {
            aGold = invadedVillage.getAGold();
            invadingVillage.addGold(aGold);
            aWood = invadedVillage.getAWood();
            invadingVillage.addWood(aWood);
            dest.setStructureType(StructureType.NO_STRUCT);  //Structure Type should be none because the invading village will already have a Village
        }
        dest.setVillage(invadingVillage);
        invadedVillage.removeTile(dest);
        invadingVillage.addTile(dest);
        
    }

    public void buildRoad(Unit u) {
        UnitType unitType;
        unitType = u.getUnitType();
        if (unitType == UnitType.PEASANT) {
            u.setActionType(ActionType.BUILDINGROAD);
        }
    }

    public void upgradeVillage(Village v, VillageType newType) {
        v.upgradeVillage(newType);
    }

    public void takeOverTile(Tile dest, Village invadingVillage) {
        int aWood;
        StructureType structureType;
        boolean canFuse;
        Village invadedVillage;
        Tile capital;
        int aGold;
        invadedVillage = dest.getVillage();
        structureType = dest.getStructureType();
        capital = invadedVillage.getCapital();
        if (dest.equals(capital)) {
            aGold = invadedVillage.getAGold();
            invadingVillage.addGold(aGold);
            aWood = invadedVillage.getAWood();
            invadingVillage.addWood(aWood);
            dest.setStructureType(StructureType.NO_STRUCT); //should this be no struct? The invading village already has a structure type
        }
        dest.setVillage(invadingVillage);
        invadingVillage.addTile(dest);
      
        }
    }

