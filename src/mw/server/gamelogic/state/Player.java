package mw.server.gamelogic.state;


import java.io.Serializable;
import java.util.Collection;
import java.util.HashSet;
import java.util.Observable;




import mw.server.gamelogic.enums.Color;
import mw.server.gamelogic.enums.PlayerState;



/**
 * Player class definition.
 * Generated by the TouchCORE code generator.
 */
public class Player extends Observable implements Serializable{

	private Color aColor; 
	private Collection<Village> aVillages;
	private PlayerState aPlayerState;
	
	public Player ()
	{
		aVillages = new HashSet<Village>();
		aPlayerState= PlayerState.PLAYING;
	}

	public void assignColor(Color pColor)
	{
		aColor = pColor; 
	}

	public Color getPlayerColor()
	{
		return aColor; 
	}

	public void removeVillage(Village pVillage) 
	{
		aVillages.remove(pVillage); 
	}

	public Collection<Village> getVillages() 
	{
		return aVillages; 
	}

	public void addVillage(Village pVillage) {
		System.out.println("[Game] Adding a village with color " + pVillage.getColor() + " to the player with color " + getPlayerColor()  );
		aVillages.add(pVillage);

	}
	
	public void eliminate()
	{
		aPlayerState = PlayerState.LOST;
		setChanged();
	}
	
	
	public PlayerState getPlayerState()
	{
		return aPlayerState;
	}
	
	public boolean isEliminated()
	{
		if (aVillages.size() == 0)
		{
			return true;
		}
		return false;
	}

	public void win() {
		aPlayerState = PlayerState.WON;
		setChanged();
		
	}
}
